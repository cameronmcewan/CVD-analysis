install.packages("usethis")
Yes
install.packages("usethis")
library(usethis)
use_git_config(user.name = "Bob Smith", user.email = "bob@example.org")
use_git_config(user.name = "cameronmcewan", user.email = "cm17521@bristol.ac.uk")
library(usethis)
use_git_config(user.name = "cameronmcewan", user.email = "cm17521@bristol.ac.uk")
<- c(3,7,4)
<- c(3,7,4)
x
x <- c(3,7,4)
x
l <- list(1:4)
l
animals <- ("snake, dog, cat, lion")
animals
animals <- ("snake" "dog" "cat" "lion")
animals <- ("snake", "dog", "cat", "lion")
animals <- C("snake", "dog", "cat", "lion")
animals <- c("snake", "dog", "cat", "lion")
animals
num_legs <- c(0,4,4,4)
num_legs
animals_df <- data.frame(animals, num_legs)
animals_df
x_vect <- seq(12, 2, -2)
x_vect
help("seq")
X <- matrix(x_vect, 2, 3)
X
Y <- matrix(seq(1,4,1),2,2)
Y
Z <- matrix(seq(4, 10, 2), 2,2)
Z
t(Y)
t(Z0)
t(Z)
x <- 10
y <- sin(x)
help(sin)
help(list)
help(length)
x <- seq(0,20,0.01)
length(x)
y <- list(sin(x(0:n)))
y <- c(sin(x[c(0:length(x))]))
install.packages("tidyverse")
install.packages("usethis")
library(usethis)
use_git_config(user.name = "cameronmcewan", user.email = "cammcewan16@gmail.com")
library(gitcreds)
gitcreds_set()
library(tidyverse)
library(palmerpenguins)
library("palmerpenguins")
install.packages(remotes)
install.packages("remotes")
data(package = "palmerpenguins")
library(palmerpenguins)
install.packages("ggplot2")
library(palmerpenguins)
install.packages("remotes")
remotes::install_github("allisonhorst/palmerpenguins")
library(palmerpenguins)
head(penguins)
install.packages(Stat2Data)
install.packages("Stat2Data")
data("Hawks")
Stat2Data::data("Hawks")
help(geom_histogram)
geom_histogram
help(ggplot)
dim(hawksSmall)
help("adjust()")
??adjust()
help(geom_density)
geom_density
densityplot
help(densityplot, package="ggplot2")
help(map_dbl)
help(size)
help("is.integer")
help(is.wholenumber)
help(is.wholenumber)
help(row_number())
row_number(df_xy)
help(%>%)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
data("Hawks")
length(Tail)
length(RedTailedDf)
seq(7)
library(tidyverse)
library(ggplot2)
RedTailedDf <- Hawks %>%
filter(Species == "RT") %>%
select(Weight, Tail, Wing)
head(RedTailedDf)
n <- length(pull(RedTailedDf, Tail))
mu_MLE <- mean(pull(RedTailedDf, Tail))
var_MLE <- var(pull(RedTailedDf,Tail))
mu_MLE2 <- (sum(pull(RedTailedDf, Tail)))/n    # its the same as mean function
var_MLE2 <- (sum((pull(RedTailedDf,Tail))-mu_MLE)^2)/n
set.seed(0)
num_trials <- 1000
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
ggplot() + labs(x="Variance",y="Density") + theme_bw() +
geom_density(data=simulation_df, aes(x=sample_var, color="Sample", linetype="Sample")) +
geom_vline(aes(xintercept=sigma_sqr, color="Population", linetype="Population"))+
scale_color_manual(name="Legend", values=c("Sample"="red", "Population"="blue"))+
scale_linetype_manual(name="Legend",values=c("Sample"="solid","Population"="dashed"))
set.seed(0)
num_trials <- 1000
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
library(tidyverse)
library(ggplot2)
RedTailedDf <- Hawks %>%
filter(Species == "RT") %>%
select(Weight, Tail, Wing)
head(RedTailedDf)
n <- length(pull(RedTailedDf, Tail))
mu_MLE <- mean(pull(RedTailedDf, Tail))
var_MLE <- var(pull(RedTailedDf,Tail))
mu_MLE2 <- (sum(pull(RedTailedDf, Tail)))/n    # its the same as mean function
var_MLE2 <- (sum((pull(RedTailedDf,Tail))-mu_MLE)^2)/n
set.seed(0)
num_trials <- 1000
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
ggplot() + labs(x="Variance",y="Density") + theme_bw() +
geom_density(data=simulation_df, aes(x=sample_var, color="Sample", linetype="Sample")) +
geom_vline(aes(xintercept=sigma_sq, color="Population", linetype="Population"))+
scale_color_manual(name="Legend", values=c("Sample"="red", "Population"="blue"))+
scale_linetype_manual(name="Legend",values=c("Sample"="solid","Population"="dashed"))
set.seed(0)
num_trials <- 10
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
ggplot() + labs(x="Variance",y="Density") + theme_bw() +
geom_density(data=simulation_df, aes(x=sample_var, color="Sample", linetype="Sample")) +
geom_vline(aes(xintercept=sigma_sq, color="Population", linetype="Population"))+
scale_color_manual(name="Legend", values=c("Sample"="red", "Population"="blue"))+
scale_linetype_manual(name="Legend",values=c("Sample"="solid","Population"="dashed"))
library(tidyverse)
library(ggplot2)
RedTailedDf <- Hawks %>%
filter(Species == "RT") %>%
select(Weight, Tail, Wing)
head(RedTailedDf)
n <- length(pull(RedTailedDf, Tail))
mu_MLE <- mean(pull(RedTailedDf, Tail))
var_MLE <- var(pull(RedTailedDf,Tail))
mu_MLE2 <- (sum(pull(RedTailedDf, Tail)))/n    # its the same as mean function
var_MLE2 <- (sum((pull(RedTailedDf,Tail))-mu_MLE)^2)/n
set.seed(0)
num_trials <- 10
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
ggplot() + labs(x="Variance",y="Density") + theme_bw() +
geom_density(data=simulation_df, aes(x=sample_var, color="Sample", linetype="Sample")) +
geom_vline(aes(xintercept=sigma_sq, color="Population", linetype="Population"))+
scale_color_manual(name="Legend", values=c("Sample"="red", "Population"="blue"))+
scale_linetype_manual(name="Legend",values=c("Sample"="solid","Population"="dashed"))
library(tidyverse)
library(ggplot2)
RedTailedDf <- Hawks %>%
filter(Species == "RT") %>%
select(Weight, Tail, Wing)
head(RedTailedDf)
n <- length(pull(RedTailedDf, Tail))
mu_MLE <- mean(pull(RedTailedDf, Tail))
var_MLE <- var(pull(RedTailedDf,Tail))
mu_MLE2 <- (sum(pull(RedTailedDf, Tail)))/n    # its the same as mean function
var_MLE2 <- (sum((pull(RedTailedDf,Tail))-mu_MLE)^2)/n
set.seed(0)
num_trials <- 100
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
ggplot() + labs(x="Variance",y="Density") + theme_bw() +
geom_density(data=simulation_df, aes(x=sample_var, color="Sample", linetype="Sample")) +
geom_vline(aes(xintercept=sigma_sq, color="Population", linetype="Population"))+
scale_color_manual(name="Legend", values=c("Sample"="red", "Population"="blue"))+
scale_linetype_manual(name="Legend",values=c("Sample"="solid","Population"="dashed"))
library(tidyverse)
library(ggplot2)
RedTailedDf <- Hawks %>%
filter(Species == "RT") %>%
select(Weight, Tail, Wing)
head(RedTailedDf)
n <- length(pull(RedTailedDf, Tail))
mu_MLE <- mean(pull(RedTailedDf, Tail))
var_MLE <- var(pull(RedTailedDf,Tail))
mu_MLE2 <- (sum(pull(RedTailedDf, Tail)))/n    # its the same as mean function
var_MLE2 <- (sum((pull(RedTailedDf,Tail))-mu_MLE)^2)/n
set.seed(0)
num_trials <- 10000
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
ggplot() + labs(x="Variance",y="Density") + theme_bw() +
geom_density(data=simulation_df, aes(x=sample_var, color="Sample", linetype="Sample")) +
geom_vline(aes(xintercept=sigma_sq, color="Population", linetype="Population"))+
scale_color_manual(name="Legend", values=c("Sample"="red", "Population"="blue"))+
scale_linetype_manual(name="Legend",values=c("Sample"="solid","Population"="dashed"))
n <- length(pull(RedTailedDf, Tail))
mu_MLE <- mean(pull(RedTailedDf, Tail))
var_MLE <- var(pull(RedTailedDf,Tail))
mu_MLE2 <- (sum(pull(RedTailedDf, Tail)))/n    # its the same as mean function
var_MLE2 <- (sum((pull(RedTailedDf,Tail)-mu_MLE)^2))/n
?seq
MLE_df <- data.frame(seq(100,300, length.out=num_trials))
out
MLE_df
? dnorm
MLE_df <- data.frame(sequence=seq(100,300, length.out=num_trials)) %>%
mutate(density=map(.x=sequence,
.f=~dnorm(mean = mu_MLE, sd = sqrt(var_MLE2))))
MLE_df <- data.frame(sequence=seq(100,300, length.out=num_trials)) %>%
mutate(density=map(.x=sequence,
.f=~dnorm(.x, mean = mu_MLE, sd = sqrt(var_MLE2))))
MLE_df
library(tidyverse)
library(ggplot2)
RedTailedDf <- Hawks %>%
filter(Species == "RT") %>%
select(Weight, Tail, Wing)
head(RedTailedDf)
n <- length(pull(RedTailedDf, Tail))
mu_MLE <- mean(pull(RedTailedDf, Tail))
var_MLE <- var(pull(RedTailedDf,Tail))   # this isn't the actual MLE var
mu_MLE2 <- (sum(pull(RedTailedDf, Tail)))/n    # its the same as mean function
var_MLE2 <- (sum((pull(RedTailedDf,Tail)-mu_MLE)^2))/n  # this is MLE
set.seed(0)
num_trials <- 10000
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE2
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
MLE_df <- data.frame(sequence=seq(100,300, length.out=num_trials)) %>%
mutate(density=map(.x=sequence,
.f=~dnorm(.x, mean = mu_MLE, sd = sqrt(var_MLE2))))
ggplot() + labs(x="Variance",y="Density") + theme_bw() +
geom_density(data=simulation_df, aes(x=sample_var, color="Sample", linetype="Sample")) +
geom_vline(aes(xintercept=sigma_sq, color="Population", linetype="Population"))+
geom_line(data=MLE_df, aes(x=sequence, y=density)) +
scale_color_manual(name="Legend", values=c("Sample"="red", "Population"="blue"))+
scale_linetype_manual(name="Legend",values=c("Sample"="solid","Population"="dashed"))
? load
load(“finance_data_EMATM0061”)
load(finance_data_EMATM0061)
read.csv(finance_data_EMATM0061)
finance_data_original <- data.frame(read.csv('/Users/Cam/Documents/FinTech MSc/SCEM/Summative/finance_data_EMATM0061.csv'))
finance_data_original <- data.frame(read.csv('/Users/Cam/Documents/FinTech MSc/SCEM/Summative/finance_data_EMATM0061.csv'))
finance_data_original
# A.1 - Load the finance data file into a data frame
```{r}
finance_data_original <- data.frame(read.csv('/Users/Cam/Documents/FinTech MSc/SCEM/Summative/finance_data_EMATM0061.csv'))
head(finance_data_original)
finance_data_original <- data.frame(read.csv('/Users/Cam/Documents/FinTech MSc/SCEM/Summative/finance_data_EMATM0061.csv'))
head(finance_data_original)
head(finance_data_original)
head(finance_data_original)
?echo
??echo
? opts_chunk
```{r setup, include=FALSE}
head(finance_data)
finance_data <- finance_data_original %>%
select(state_year_code, Details.Education.Education.Total, Details.Health.Health.Total.Expenditure, Details.Transportation.Highways.Highways.Total.Expenditure, Totals.Revenue, Totals.Expenditure)
finance_data <- finance_data_original %>%
select(state_year_code, Details.Education.Education.Total, Details.Health.Health.Total.Expenditure, Details.Transportation.Highways.Highways.Total.Expenditure, Totals.Revenue, Totals.Expenditure)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
RedTailedDf <- Hawks %>%
filter(Species == "RT") %>%
select(Weight, Tail, Wing)
n <- length(pull(RedTailedDf, Tail))
mu_MLE <- mean(pull(RedTailedDf, Tail))
var_MLE <- var(pull(RedTailedDf,Tail))   # this isn't the actual MLE var
mu_MLE2 <- (sum(pull(RedTailedDf, Tail)))/n    # its the same as mean function
var_MLE2 <- (sum((pull(RedTailedDf,Tail)-mu_MLE)^2))/n  # this is MLE
set.seed(0)
num_trials <- 10000
sample_size <- n
mu <- mu_MLE
sigma_sq <- var_MLE2
simulation_df <- data.frame(trial=seq(num_trials)) %>%
mutate(simulation=map(.x=trial,
.f=~rnorm(sample_size,mean = mu, sd=sqrt(sigma_sq))))%>%
mutate(sample_var=map_dbl(.x=simulation, .f=var))
MLE_df <- data.frame(sequence=seq(100,300, length.out=num_trials)) %>%
mutate(density=map(.x=sequence,
.f=~dnorm(.x, mean = mu_MLE, sd = sqrt(var_MLE2))))
ggplot() + labs(x="Variance",y="Density") + theme_bw() +
geom_density(data=simulation_df, aes(x=sample_var, color="Sample", linetype="Sample")) +
geom_vline(aes(xintercept=sigma_sq, color="Population", linetype="Population")) +
scale_color_manual(name="Legend", values=c("Sample"="red", "Population"="blue")) +
scale_linetype_manual(name="Legend",values=c("Sample"="solid","Population"="dashed"))
ggplot()
geom_line(data=MLE_df, aes(x=sequence, y=density)) + #make this work , this is the MLE plot
help(boot)
?boot
??boot
library(tidyverse)
library(ggplot2)
library(worldfootballR)
library(gtable)
library(grid)
library(gridExtra)
library(lattice)
knitr::opts_chunk$set(echo = TRUE,message = FALSE, warning = FALSE)
# list of columns to be removed
remove_headers <- c("Competition_Name","Gender","Squad","Rk","Team_or_Opponent",
"Attendance","xG","xGA","xGD","xGD.90","W","D","L","GF","GA",
"Top.Team.Scorer","Goalkeeper","Notes")
# load the league data and data wrangling
big_5_leagues <- get_season_team_stats(country = c("ENG","ESP","ITA","GER","FRA"),
gender = "M",
season_end_year = c(1996:2021),
tier = "1st",
stat_type = "league_table") %>%
mutate(pts_per_match=Pts/MP, gd_per_match=GD/MP) %>%
select("Country","Season_End_Year","pts_per_match","gd_per_match") %>%
group_by(Country,Season_End_Year)
setwd("~/Documents/Projects/ICHP Interview")
